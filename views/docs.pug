doctype html
head
  meta(charset='UTF-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1.0')
  meta(name='description' content='Bu API, TÃ¼rkiye\'deki iller hakkÄ±nda veri almanÄ±zÄ± saÄŸlar. / This API allows you to get data about provinces in Turkey.')
  meta(name='keywords' content='api, turkiye, tÃ¼rkiye, iller, sehirler, ilceler, veri, json, turkey, provinces, cities, districts, data, json')
  meta(name='author' content='Ubeyde Emir Ã–zdemir')
  meta(name='robots' content='index, follow')
  meta(name='googlebot' content='index, follow')
  meta(http-equiv='Content-Type' content='text/html; charset=utf-8')
  link(rel='icon' type='image/x-icon' href='favicon/turkey_flag_flags_18075.ico')
  link(rel='preconnect' href='https://fonts.googleapis.com')
  link(rel='preconnect' href='https://fonts.gstatic.com' crossorigin='')
  link(href='https://fonts.googleapis.com/css2?family=Inter:wght@100;200;300;400;500;600;700;800;900&display=swap' rel='stylesheet')
  link(rel='stylesheet' href='//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/styles/foundation.min.css')
  script(src='//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.6.0/highlight.min.js')
  style.
    *,
    *::before,
    *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    }
    *:focus {
    outline: 3px solid #ff0000;
    border-radius: 5px;
    z-index: 3;
    }
    html {
    scroll-behavior: smooth;
    }
    body {
    font-family: 'Inter', sans-serif;
    }
    a {
    text-decoration: none;
    color: inherit;
    }
    .floating-nav-button {
    display: none;
    }
    nav.sidenav {
    position: fixed;
    top: 0;
    left: 0;
    width: 300px;
    height: 100vh;
    background-color: #f5f5f5;
    border-right: 1px solid #e5e5e5;
    overflow-y: auto;
    }
    a.sidenav__item {
    display: block;
    padding: 1rem;
    border-bottom: 1px solid #e5e5e5;
    }
    a.sidenav__item:hover {
    background-color: #f1f1f1;
    }
    article.content {
    flex: 1;
    padding: 1rem;
    margin-left: 300px;
    }
    article.content h1 {
    font-size: 2rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h2 {
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h3 {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h4 {
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h5 {
    font-size: 0.875rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h6 {
    font-size: 0.75rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content p {
    font-size: 1rem;
    font-weight: 400;
    margin-bottom: 1rem;
    }
    article.content a {
    color: turquoise;
    }
    article.content a:hover,
    article.content a:active {
    color: darkturquoise;
    transition: all 0.3s ease;
    border-bottom: 1px solid darkturquoise;
    }
    article.content pre.urlframe {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: 1rem;
    }
    article.content pre.urlframe span.urlframe__method {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: 1rem;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    font-weight: 700;
    color: white;
    background-color: green;
    }
    article.content pre.urlframe code.urlframe__url {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: flex-start;
    gap: 1rem;
    padding: 0.5rem 1rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    font-weight: 700;
    color: #333333;
    border: 1px solid #555555;
    overflow-y: auto;
    background-color: #eee;
    }
    article.content pre {
    padding: 1rem;
    border-radius: 0.25rem;
    }
    article.content code {
    padding: 0.25rem;
    border-radius: 0.25rem;
    }
    article.content img {
    max-width: 100%;
    }
    article.content table {
    width: 100%;
    border-collapse: collapse;
    }
    article.content table th {
    background-color: #f5f5f5;
    padding: 0.5rem;
    border: 1px solid #e5e5e5;
    }
    article.content table td {
    padding: 0.5rem;
    border: 1px solid #e5e5e5;
    }
    article.content table tr:nth-child(odd) {
    background-color: #f5f5f5;
    }
    article.content table tr:nth-child(even) {
    background-color: #fff;
    }
    article.content .hook {
    color: black;
    }
    article.content .hook:hover {
    color: #555555;
    }
    article.content .hook::before {
    content: 'ðŸ”—';
    margin-right: 0.5rem;
    }
    @media only screen and (max-width: 768px) {
    a.floating-nav-button {
    position: fixed;
    top: 1rem;
    left: 1rem;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: #f5f5f5;
    border: 1px solid #e5e5e5;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: all 0.3s ease;
    }
    nav.sidenav {
    height: 100%;
    width: 0;
    position: fixed;
    z-index: 2;
    top: 0;
    left: 0;
    overflow-x: hidden;
    transition: all 0.5s;
    padding-top: 60px;
    }
    a.sidenav__item {
    display: block;
    padding: 8px 8px 8px 32px;
    text-decoration: none;
    color: #818181;
    display: block;
    transition: all 0.3s ease;
    }
    a.sidenav__item:hover {
    color: #f1f1f1;
    }
    .content__title {
    padding-top: 4rem;
    }
    article.content {
    margin-left: 0;
    padding: 1rem;
    }
    article.content h1 {
    font-size: 1.6rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h2 {
    font-size: 1.2rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h3 {
    font-size: 1rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h4 {
    font-size: 0.8rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h5 {
    font-size: 0.6rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    article.content h6 {
    font-size: 0.4rem;
    font-weight: 700;
    margin-bottom: 1rem;
    }
    }
  title Documentation | Provinces of Turkey API
a#floating-nav-button.floating-nav-button(href='#') &#x2630;
nav.sidenav
  a.sidenav__item(href='/') Return to home page
  a.sidenav__item(href='#information') Information
  a.sidenav__item(href='#provinces') Provinces
  a.sidenav__item(href='#get-all-provinces') &bull; Get All Provinces
  a.sidenav__item(href='#get-exact-province') &bull; Get Exact Province
  a.sidenav__item(href='#districts') Districts
  a.sidenav__item(href='#get-all-districts') &bull; Get All Districts
  a.sidenav__item(href='#get-exact-district') &bull; Get Exact District
  a.sidenav__item(href='/examples') Examples
article.content
  h1.content__title
    a#information.hook(href='#information') Provinces of Turkey API Documentation
  hr
  br
  h3
    strong What is the purpose of this API?
  p
    | This API allows you to get data about 
    strong provinces in Turkey.
    |  &#x1F1F9;&#x1F1F7;
  p
    | If you want to see API features as Postman documentation, you can 
    a(target='_blank' href='https://documenter.getpostman.com/view/19561492/UzBguVHM') click here.
  p
    | For explanation of the API in Turkish language, you can 
    a(target='_blank' href='https://gist.github.com/ubeydeozdmr/e94ea5a1929805988b803ecb682c623a') click here.
  h1
    a#provinces.hook(href='#provinces') Provinces
  p Here are the routes related to provinces.
  h2
    a#get-all-provinces.hook(href='#get-all-provinces')
      | Get All Provinces
  pre.urlframe
    span.urlframe__method GET
    code.urlframe__url.language-http #{protocol}#{host}/api/v1/provinces

  p You can use this route to get data for all provinces.
  table
    thead
      tr
        th Query Params
        th Type
        th Description
    tbody
      tr
        td name
        td string
        td It shows all the provinces containing or matching your search query.
      tr
        td minPopulation
        td number
        td
          | It shows all the provinces with a population greater than or equal to the
          | value you entered.
      tr
        td maxPopulation
        td number
        td
          | It shows all the provinces with a population less than or equal to the value
          | you entered.
      tr
        td isMetropolitan
        td boolean
        td It shows all the provinces that are metropolitan or not.
      tr
        td offset
        td number
        td
          | Used for pagination. Use this to set a starting point in search results.
      tr
        td limit
        td number
        td
          | Used for pagination. Use this to set the maximum number of results to show
          | you.
      tr
        td fields
        td string
        td It shows the fields you want to see in the response.
      tr
        td sort
        td string
        td It sorts the results in ascending or descending order.
  br
  h2
    a#get-exact-province.hook(href='#get-exact-province')
      | Get Exact Province
  pre.urlframe
    span.urlframe__method GET
    code.urlframe__url.language-http #{protocol}#{host}/api/v1/provinces/:id

  p You can use this route to get data for exact province.
  table
    thead
      tr
        th Path Variables
        th Description
    tbody
      tr
        td id
        td ID of province
  br
  table
    thead
      tr
        th Query Params
        th Type
        th Description
    tbody
      tr
        td fields
        td string
        td It shows the fields you want to see in the response.
  br
  h1
    a#districts.hook(href='#districts') Districts
  p Here are the routes related to districts.
  h2
    a#get-all-districts.hook(href='#get-all-districts')
      | Get All Districts
  pre.urlframe
    span.urlframe__method GET
    code.urlframe__url.language-http #{protocol}#{host}/api/v1/districts

  p You can use this route to get data for all districts.
  table
    thead
      tr
        th Query Params
        th Type
        th Description
    tbody
      tr
        td name
        td string
        td It shows all the districts containing or matching your search query.
      tr
        td minPopulation
        td number
        td
          | It shows all the districts with a population greater than or equal to the
          | value you entered.
      tr
        td maxPopulation
        td number
        td
          | It shows all the districts with a population less than or equal to the value
          | you entered.
      tr
        td offset
        td number
        td
          | Used for pagination. Use this to set a starting point in search results.
      tr
        td limit
        td number
        td
          | Used for pagination. Use this to set the maximum number of results to show
          | you.
      tr
        td fields
        td string
        td It shows the fields you want to see in the response.
      tr
        td sort
        td string
        td It sorts the results in ascending or descending order.
  br
  h2
    a#get-exact-district.hook(href='#get-exact-district')
      | Get Exact District
  p You can use this route to get data for exact district.
  pre.urlframe
    span.urlframe__method GET
    code.urlframe__url.language-http #{protocol}#{host}/api/v1/districts/:id

  p You can use this route to get data for all districts.
  table
    thead
      tr
        th Path Variables
        th Description
    tbody
      tr
        td id
        td ID of district
  br
  table
    thead
      tr
        th Query Params
        th Type
        th Description
    tbody
      tr
        td fields
        td string
        td It shows the fields you want to see in the response.
  br
  p
    | Provinces of Turkey API is an open-source project.
    a(target='_blank' href='https://github.com/ubeydeozdmr/provinces-of-turkey-api')
      |  Click here
    |         for GitHub link! &#x1F63B;
script.
  let isOpened = false;
  document.getElementById('floating-nav-button').addEventListener('click', () => {
    isOpened = !isOpened;
    if (isOpened) {
      document.querySelector('.sidenav').style.width = '80vw';
      document.querySelector('.floating-nav-button').innerHTML = '&#10006;';
      document.querySelector('.floating-nav-button').style.left = 'inherit';
      document.querySelector('.floating-nav-button').style.right = '1rem';
    } else {
      document.querySelector('.sidenav').style.width = '0';
      document.querySelector('.floating-nav-button').innerHTML = '&#9776;';
      document.querySelector('.floating-nav-button').style.left = '1rem';
      document.querySelector('.floating-nav-button').style.right = 'inherit';
    }
  });
  // document.querySelector('.sidenav').addEventListener('click', () => {
  //   document.querySelector('.sidenav').style.width = '0';
  // });
  document.querySelectorAll('a.sidenav__item').forEach(item => {
    item.addEventListener('click', () => {
      if (window.innerWidth < 768) {
        document.querySelector('.sidenav').style.width = '0';
        document.querySelector('.floating-nav-button').innerHTML = '&#9776;';
        document.querySelector('.floating-nav-button').style.left = '1rem';
        document.querySelector('.floating-nav-button').style.right = 'inherit';
        isOpened = false;
      }
    });
  });
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    if (anchor === 'a#floating-nav-button.floating-nav-button') return;
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      if (e.srcElement.id === 'floating-nav-button') return;
      document.querySelector(this.getAttribute('href')).scrollIntoView({
        behavior: 'smooth',
      });
    });
  });
  document.querySelectorAll('pre code').forEach(element => {
    hljs.highlightElement(element);
  });